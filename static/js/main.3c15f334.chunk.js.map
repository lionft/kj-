{"version":3,"sources":["assets/imgs/banner/logo.webp","components/banner/components/BannerContent.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","components/mintBox/styleComponent.js","components/mintBox/MintBox.js","components/toastNoti/ToastNoti.js","components/banner/BannerComp.js","assets/imgs/nftExplain/img1.png","components/nftExplain/NFTExplain.js","assets/imgs/collections/img1.png","assets/imgs/collections/img2.png","assets/imgs/collections/img3.png","assets/imgs/collections/img4.png","components/firstBatch/components/FirstBatchCollection.js","components/firstBatch/FirstBatch.js","components/mainLayout/MainLayout.js","App.js","reportWebVitals.js","index.js"],"names":["BannerContent","Container","fluid","className","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","SpacerXSmall","styled","div","image","SpacerSmall","SpacerMedium","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLink","img","MintBox","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","OWNER_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","COST1","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","lineHeight","disabled","onClick","e","preventDefault","newMintAmount","decrementMintAmount","incrementMintAmount","WalletAddress","toUpperCase","TheOwnerAddress","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","ToastNoti","showToast","setShowToast","setTimeout","ToastContainer","position","Toast","show","Header","closeButton","Body","BannerComp","Row","src","Logo","alt","Col","lg","md","sm","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","NftExplain","Img1","Accordion","Item","eventKey","collectionsData","Img2","Img3","Img4","FirstBatchCollection","width","map","val","index","contentData","FirstBatch","MainLayout","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AOS","init","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c15f334.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.11eb0bbf.webp\";","import React from \"react\";\nimport {Container} from \"react-bootstrap\";\nimport {FaQuoteRight} from \"react-icons/all\";\n\nexport const BannerContent = () => {\n  return (\n    <Container fluid className=\"banner-content-container\">\n      <div data-aos=\"zoom-in\">\n        <div className=\"content-title\">\n          <h1 className=\"title\">What is an NFT?</h1>\n        </div>\n        <div className=\"content-container\">\n          <p className=\"desc\">An NFT is a digital asset that is very unique – that is, non-fungible. An NFT can\n            represent a number of digital properties, including artwork, collectibles, video snippets, an item\n            from a video game or even a music album, among others. The main thing is that.</p>\n          <div className=\"content-quote\">\n            <div className=\"content-quote-container\">\n              <div className=\"center-quote d-flex justify-content-center align-items-center\">\n                <FaQuoteRight/>\n              </div>\n              <div className=\"content-quote-detail\">\n                <p className=\"content-detail\">It can’t be traded with another one, like a dollar can be traded for\n                  another\n                  dollar.</p>\n              </div>\n            </div>\n            <div className=\"content-quote-author d-flex flex-column justify-content-center align-items-center\">\n              <p className=\"author\">- Dr. Richard Smith -</p>\n              <p className=\"author-position\">CEO of The Foundation for the Study of Cycles, explaining\n                non-fungibility</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;","import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchData} from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport {connect} from \"../../redux/blockchain/blockchainActions\";\nimport {ResponsiveWrapper, StyledButton, StyledLink, StyledRoundButton, truncate} from \"./styleComponent\";\n\nconst MintBox = () => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: '',\n    OWNER_ADDRESS: \"\",\n\n    SCAN_LINK: '',\n    NETWORK: {\n      NAME: '',\n      SYMBOL: '',\n      ID: 0,\n    },\n    NFT_NAME: '',\n    SYMBOL: '',\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    COST1: 0,\n\n    MARKETPLACE: '',\n    MARKETPLACE_LINK: '',\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let WalletAddress = blockchain.account;\n    WalletAddress = WalletAddress.toUpperCase();\n\n    let TheOwnerAddress = CONFIG.OWNER_ADDRESS;\n    TheOwnerAddress = TheOwnerAddress.toUpperCase();\n\n    if (WalletAddress==TheOwnerAddress) {\n      CONFIG.WEI_COST=0;\n\n    } else if  \n    \n      (data.totalSupply > 1 && data.totalSupply < 500  ) \n        CONFIG.WEI_COST=CONFIG.WEI_COST;\n        else if  \n    \n      (data.totalSupply > 501 && data.totalSupply < 5000  ) \n        CONFIG.WEI_COST=CONFIG.COST1;\n    \n       \n    let cost = CONFIG.WEI_COST;\n  \n    let cost1 = CONFIG.COST1;\n\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, Try  to mint again Something is wrong.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Your a Proud Owner Of ${CONFIG.NFT_NAME}  go Check it On Opensea.io .`\n        );\n\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n  \n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n  \n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n  \n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n  \n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n  \n  useEffect(() => {\n    getConfig();\n  }, []);\n  \n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  \n  return (\n    <ResponsiveWrapper flex={1} style={{padding: 24}} test>\n      <s.Container\n        flex={2}\n        jc={\"center\"}\n        ai={\"center\"}\n        style={{\n          backgroundColor: \"rgba(0,0,0,.5)\",\n          padding: 24,\n          borderRadius: 24,\n          border: \"4px dashed var(--secondary)\",\n          boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n        }}\n      >\n        <s.TextTitle\n          style={{\n            textAlign: \"center\",\n            fontSize: 50,\n            fontWeight: \"bold\",\n            color: \"var(--accent-text)\",\n          }}\n        >\n          {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n        </s.TextTitle>\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n        >\n          <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n            {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n          </StyledLink>\n        </s.TextDescription>\n        <s.SpacerSmall/>\n        {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n          <>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                color: \"var(--accent-text)\"\n              }}\n            >\n              The sale has ended.\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--accent-text)\"\n              }}\n            >\n              You can still find {CONFIG.NFT_NAME} on\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n              {CONFIG.MARKETPLACE}\n            </StyledLink>\n          </>\n        ) : (\n          <>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                color: \"var(--accent-text)\"\n              }}\n            >\n              1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n              {CONFIG.NETWORK.SYMBOL}.\n            </s.TextTitle>\n            <s.SpacerXSmall/>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--accent-text)\"\n              }}\n            >\n              Excluding gas fees.\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            {blockchain.account === \"\" ||\n            blockchain.smartContract === null ? (\n              <s.Container ai={\"center\"} jc={\"center\"}>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  Connect to the {CONFIG.NETWORK.NAME} network\n                </s.TextDescription>\n                <s.SpacerSmall/>\n                {blockchain.errorMsg !== \"\" ? (\n                  <>\n                    <s.SpacerSmall/>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {blockchain.errorMsg}\n                    </s.TextDescription>\n                  </>\n                ) : null}\n              </s.Container>\n            ) : (\n              <>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {feedback}\n                </s.TextDescription>\n                <s.SpacerMedium/>\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <StyledRoundButton\n                    style={{lineHeight: 0.4}}\n                    disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      decrementMintAmount();\n                    }}\n                  >\n                    -\n                  </StyledRoundButton>\n                  <s.SpacerMedium/>\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    {mintAmount}\n                  </s.TextDescription>\n                  <s.SpacerMedium/>\n                  <StyledRoundButton\n                    disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      incrementMintAmount();\n                    }}\n                  >\n                    +\n                  </StyledRoundButton>\n                </s.Container>\n                <s.SpacerSmall/>\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <StyledButton\n                    disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      claimNFTs();\n                      getData();\n                    }}\n                  >\n                    {claimingNft ? \"BUSY\" : \"BUY\"}\n                  </StyledButton>\n                </s.Container>\n              </>\n            )}\n          </>\n        )}\n      </s.Container>\n    </ResponsiveWrapper>\n  );\n};\n\nexport default MintBox;","import React, {useEffect, useState} from \"react\";\nimport {Toast, ToastContainer} from \"react-bootstrap\";\n\nconst ToastNoti = ({errorMsg}) => {\n  const [showToast, setShowToast] = useState(false);\n  useEffect(() => {\n    if (errorMsg) {\n      setShowToast(true);\n      setTimeout(() => {\n        setShowToast(false);\n      }, 2000);\n    }\n  }, [errorMsg]);\n  return (\n    <ToastContainer className=\"p-3\" position=\"bottom-end\">\n      <Toast show={showToast}>\n        <Toast.Header closeButton={false}>\n          <strong className=\"me-auto\">Error</strong>\n        </Toast.Header>\n        <Toast.Body>{errorMsg}</Toast.Body>\n      </Toast>\n    </ToastContainer>\n  );\n};\n\nexport default ToastNoti;","import React from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport Logo from \"../../assets/imgs/banner/logo.webp\";\nimport {BannerContent} from \"./components/BannerContent\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {connect} from \"../../redux/blockchain/blockchainActions\";\nimport {fetchData} from \"../../redux/data/dataActions\";\nimport MintBox from \"../mintBox/MintBox\";\nimport ToastNoti from \"../toastNoti/ToastNoti\";\n\nimport \"./BannerComp.scss\";\n\nconst BannerComp = () => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n  \n  return (\n    <Container fluid className=\"banner-comp d-flex justify-content-center align-items-center\">\n      <div className=\"bg-blur\"/>\n      <Row className=\"banner-comp-logo\">\n        <img src={Logo} alt=\"liber-t\"/>\n      </Row>\n      <Container className=\"banner-comp-container\">\n        <Row>\n          <Col lg={blockchain.account ? 6 : 12}\n               md={12}\n               sm={12}\n               className=\"banner-comp-container-content d-flex flex-column align-items-center justify-content-center\">\n            <BannerContent/>\n            {\n              !blockchain.account && (\n                <div data-aos=\"zoom-in\" className=\"connect-btn d-flex justify-content-center align-items-center\">\n                  <button onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                    getData();\n                  }}>Connect wallet\n                  </button>\n                </div>\n              )\n            }\n          </Col>\n          {\n            blockchain.account && (\n              <Col lg={6} md={12} sm={12} className=\"banner-comp-container-mint\">\n                <MintBox/>\n              </Col>\n            )\n          }\n        </Row>\n      </Container>\n      <ToastNoti errorMsg={blockchain.errorMsg}/>\n    </Container>\n  );\n};\n\nexport default BannerComp;","export default __webpack_public_path__ + \"static/media/img1.30eaad51.png\";","import React from \"react\";\nimport {Accordion, Col, Container, Row} from \"react-bootstrap\";\nimport Img1 from \"../../assets/imgs/nftExplain/img1.png\";\n\nimport \"./NFTExplain.scss\";\n\nconst NftExplain = () => {\n  return (\n    <Container fluid className=\"nft-explain d-flex justify-content-center align-items-center\">\n      <div className=\"bg-blur\"/>\n      <Container className=\"nft-explain-container\">\n        <Row className=\"nft-explain-content\">\n          <Col lg={6} md={12} sm={12} data-aos=\"zoom-in\" className=\"left-side\">\n            <img src={Img1} alt=\"liber-t\"/>\n          </Col>\n          <Col lg={6} md={12} sm={12} className=\"right-side\">\n            <div data-aos=\"fade-left\" className=\"content-container\">\n              <p className=\"desc\">NFTs are built on the same kind of infrastructure – blockchain – that cryptocurrencies\n                are. Because they use blockchain, the transfer of an interest in NFTs is recorded on the blockchain,\n                putting\n                ownership on a permanent record, making it impossible (or at least very hard) to falsify.</p>\n            </div>\n            <div className=\"faq-container\">\n              <Accordion>\n                <Accordion.Item data-aos=\"fade-right\" eventKey=\"0\">\n                  <Accordion.Header>But why are NFTs in such high demand?</Accordion.Header>\n                  <Accordion.Body>\n                    <p>The majority of the NFTs you purchase is nothing but a digital certificate that you can't touch,\n                      wear or use in your everyday life.</p>\n                  </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item data-aos=\"fade-right\" eventKey=\"1\">\n                  <Accordion.Header>What if you could? What if wearable, & interactable NFTs came into the\n                    picture?</Accordion.Header>\n                  <Accordion.Body>\n                    <p>Interactable & Wearable NFTs is doing just that, we're hear to change the game in more ways than\n                      you\n                      can imagine.</p>\n                    <p>Everything from custom clothing, jewelry, RC Models, gaming charactors and more is what you will\n                      find at I & W NFTs.</p>\n                  </Accordion.Body>\n                </Accordion.Item>\n              </Accordion>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n    ;\n};\n\nexport default NftExplain;","export default __webpack_public_path__ + \"static/media/img1.697689c0.png\";","export default __webpack_public_path__ + \"static/media/img2.9d7f46cd.png\";","export default __webpack_public_path__ + \"static/media/img3.58943acb.png\";","export default __webpack_public_path__ + \"static/media/img4.87880768.png\";","import {Container} from \"react-bootstrap\";\nimport Img1 from \"../../../assets/imgs/collections/img1.png\";\nimport Img2 from \"../../../assets/imgs/collections/img2.png\";\nimport Img3 from \"../../../assets/imgs/collections/img3.png\";\nimport Img4 from \"../../../assets/imgs/collections/img4.png\";\n\nconst collectionsData = [Img1, Img2, Img3, Img4, Img1, Img2, Img3, Img4, Img1, Img2, Img3, Img4];\n\nexport const FirstBatchCollection = () => {\n  return (\n    <Container className=\"slideshow-comp\" fluid>\n      <div className=\"slideshow-comp-slider\">\n        <div className=\"slideshow-comp-track\"\n             style={{width: `calc(250px * ${collectionsData.length * 3})`}}>\n          {\n            collectionsData.map((val, index) => (\n              <div key={index} className=\"slideshow-comp-slide\">\n                <img src={val} alt=\"liber-t\"/>\n              </div>\n            ))\n          }\n          {\n            collectionsData.map((val, index) => (\n              <div key={index} className=\"slideshow-comp-slide\">\n                <img src={val} alt=\"liber-t\"/>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </Container>\n  );\n};","import React from \"react\";\nimport {Container, Row} from \"react-bootstrap\";\nimport {FirstBatchCollection} from \"./components/FirstBatchCollection\";\n\nimport \"./FirstBatch.scss\";\n\nconst contentData = [\n  \"LiberT series NFTs that are direectly tagged to jewerly assets & raw moissanite diamonds.\", \"3D\" +\n  \" NFT Cards of the latest RGT Crawler with speciality accessories - the more you customize the original model the\" +\n  \" more unique the matching becomes.\", \"3D NFT Cards of a 1:4 scale motorcross bike with speciality accessories - the more you customize the original model the more unique the matching becomes.\", \"3D NFT Cards of a 1:12/1:16 scale RC Construction models with speciality accessories - the more you customize the original model the more unique the matching becomes.\"\n];\n\nconst FirstBatch = () => {\n  return (\n    <Container fluid className=\"first-batch-comp\">\n      <div className=\"bg-blur\"/>\n      <Row className=\"first-batch-collection\">\n        <FirstBatchCollection/>\n      </Row>\n      <Container className=\"first-batch-container d-flex flex-column justify-content-center align-items-center\">\n        <Row data-aos=\"fade-down\" className=\"first-batch-title justify-content-center align-items-center\">\n          <h2 className=\"title\">Our first batch of NFTs this year will be</h2>\n        </Row>\n        <Row className=\"first-batch-content\">\n          <div className=\"content-container\">\n            <div className=\"content-items\">\n              {\n                contentData.map((val, index) => (\n                  <div data-aos=\"zoom-in\" key={index} className=\"item\">\n                    <p className=\"desc\">{val}</p>\n                  </div>\n                ))\n              }\n            </div>\n            <div className=\"footer-content\">\n              <p className=\"desc\">Our future roadmap includes plans to build a virtual store/marketplace where you will\n                be\n                able to navigate throughout to view and make purchases</p>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default FirstBatch;","import React from \"react\";\nimport {Container, Row} from \"react-bootstrap\";\nimport BannerComp from \"../banner/BannerComp\";\nimport NftExplain from \"../nftExplain/NFTExplain\";\nimport FirstBatch from \"../firstBatch/FirstBatch\";\n\nconst MainLayout = () => {\n  return (\n    <Container fluid className=\"main-layout\">\n      <Row id=\"home\">\n        <BannerComp/>\n      </Row>\n      <Row>\n        <NftExplain/>\n      </Row>\n      <Row>\n        <FirstBatch/>\n      </Row>\n    </Container>\n  );\n};\n\nexport default MainLayout;","import React from \"react\";\nimport MainLayout from \"./components/mainLayout/MainLayout\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/App.scss\";\n\nfunction App() {\n  return (\n    <MainLayout/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport AOS from \"aos\";\nimport \"./styles/reset.css\";\nimport \"aos/dist/aos.css\";\n\nAOS.init();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}